{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","value","setValue","key","setKey","operator","setOperator","watchRef","createRef","updateRef","useLayoutEffect","font","current","clientWidth","scrollWidth","style","fontSize","Display","className","ref","toLocaleString","handleNumPress","number","parseFloat","Buttons","onClick","Footer","href","xmlns","width","height","fill","class","viewBox","d","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9df07561.chunk.js","sourcesContent":["import React from 'react';\n// import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n\n  const [value, setValue] = React.useState(0);\n  const [key, setKey] = React.useState(-1);\n  \n  const [operator, setOperator] = React.useState('');\n\n  const watchRef = React.createRef();\n  const updateRef = React.createRef();\n\n  // For shrinking display when number overflows\n  React.useLayoutEffect(() => {\n    let font = 7;\n    while (watchRef.current.clientWidth < watchRef.current.scrollWidth) {\n      watchRef.current.style.fontSize = `calc(100vh / ${font})`;\n      updateRef.current.style.fontSize = `calc(100vh / ${font})`;\n      font += 1;\n    }\n  }, [watchRef, updateRef]);\n\n  const Display = () => {\n    return (\n      <>\n      <div className='display'>\n        <div className='value' ref={updateRef}>\n          {key > 0? key : <>{value.toLocaleString(\"en-US\")}{operator==='.'? '.' : ''}</>}\n        </div>\n      </div>\n      {/* For making the value responsive */}\n      <div className='display hidden'>\n        <div className='black' ref={watchRef}>\n          {value.toLocaleString(\"en-US\")}\n        </div>\n      </div>\n      </>\n    );\n  }\n\n  const handleNumPress = (number) => {\n    if (operator !== '' && operator !== '=' && operator !== '.')\n      setKey(number);\n    else setKey (-1);\n    \n    switch (number) { \n      case 'clear':\n        setValue(0);\n        setOperator('');\n        return;\n      case 'negative':\n        setValue(value * -1);\n        setOperator('');\n        return;\n      case 'hundredth':\n        setValue(value / 100);\n        setOperator('');\n        return;\n      case 'equals':\n        setKey(-1);\n        setOperator('answered');\n        return;\n      default:\n        break;\n     }\n\n    switch (operator) {\n      // default if no operator is selected\n      case '+':\n        setValue(value + number);\n        setOperator('');\n        break;\n      case '-':\n        setValue(value - number);\n        setOperator('');\n        break;\n      case '*':\n        setValue(value * number);\n        setOperator('');\n        break;\n      case '/':\n        setValue(value / number);\n        setOperator('');\n        break;\n      case '.':\n        setValue(value + (number / 10));\n        setOperator('');\n        break;\n      case 'answered':\n        setValue(number);\n        setOperator('');\n        break;\n      default:\n        setValue(parseFloat((value+'') + (number+'')));\n    }\n  }\n\n  const Buttons = () => {\n    return (\n      <div className='buttons'>\n        {/* Row 1 */}\n        <div className='btnRow'>\n          <div className='btn lGrey' onClick={() => handleNumPress('clear')}>\n            <div className='key'>{value===0? 'AC': 'C'}</div>\n          </div>\n          <div className='btn lGrey' onClick={() => handleNumPress('negative')}>\n            <div className='key'>+/-</div>\n          </div>\n          <div className='btn lGrey' onClick={() => handleNumPress('hundredth')}>\n            <div className='key'>%</div>\n          </div>\n          <div className={operator=== '/'? 'btn active': 'btn orange'} onClick={() => setOperator('/')}>\n          <div className='key'>&divide;</div>\n          </div>\n        </div>\n        {/* Row 2 */}\n        <div className='btnRow'>\n          <div className='btn dGrey' onClick={() => handleNumPress(7)}>\n            <div className='key'>7</div>\n          </div>\n          <div className='btn dGrey' onClick={() => handleNumPress(8)}>\n            <div className='key'>8</div>\n          </div>\n          <div className='btn dGrey' onClick={() => handleNumPress(9)}>\n            <div className='key'>9</div>\n          </div>\n          <div className={operator=== '*'? 'btn active': 'btn orange fade'} onClick={() => setOperator('*')}>\n          <div className='key'>&times;</div>\n          </div>\n        </div>\n        {/* Row 3 */}\n        <div className='btnRow'>\n          <div className='btn dGrey' onClick={() => handleNumPress(4)}>\n            <div className='key'>4</div>\n          </div>\n          <div className='btn dGrey' onClick={() => handleNumPress(5)}>\n            <div className='key'>5</div>\n          </div>\n          <div className='btn dGrey' onClick={() => handleNumPress(6)}>\n            <div className='key'>6</div>\n          </div>\n          <div className={operator=== '-'? 'btn active': 'btn orange'} onClick={() => setOperator('-')}>\n          <div className='key'>&minus;</div>\n          </div>\n        </div>\n        {/* Row 4 */}\n        <div className='btnRow'>\n          <div className='btn dGrey' onClick={() => handleNumPress(1)}>\n            <div className='key'>1</div>\n          </div>\n          <div className='btn dGrey' onClick={() => handleNumPress(2)}>\n            <div className='key'>2</div>\n          </div>\n          <div className='btn dGrey' onClick={() => handleNumPress(3)}>\n            <div className='key'>3</div>\n          </div>\n          <div className={operator=== '+'? 'btn active': 'btn orange'} onClick={() => setOperator('+')}>\n          <div className='key'>&#43;</div>\n          </div>\n        </div>\n        {/* Row 5 */}\n        <div className='btnRow'>\n          <div className='btn dGrey wide' onClick={() => handleNumPress(0)}>\n            <div className='key'>0</div>\n          </div>\n          <div className='btn dGrey' onClick={() => setOperator('.')}>\n            <div className='key'>.</div>\n          </div>\n          <div className='btn orange' onClick={() => handleNumPress('equals')}>\n          <div className='key'>=</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  const Footer = () => {\n    return <div className='footer'>\n      <div className='col50'>&copy; 2021 Jay Jaber</div>\n      <div className='col'>\n          <a className=\"grey-text text-lighten-3\" href=\"https://github.com/JayJaber\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-github\" viewBox=\"0 0 16 16\">\n            <path d=\"M8 0C3.58 0 0 3.58 0 8c0 3.54 2.29 6.53 5.47 7.59.4.07.55-.17.55-.38 0-.19-.01-.82-.01-1.49-2.01.37-2.53-.49-2.69-.94-.09-.23-.48-.94-.82-1.13-.28-.15-.68-.52-.01-.53.63-.01 1.08.58 1.23.82.72 1.21 1.87.87 2.33.66.07-.52.28-.87.51-1.07-1.78-.2-3.64-.89-3.64-3.95 0-.87.31-1.59.82-2.15-.08-.2-.36-1.02.08-2.12 0 0 .67-.21 2.2.82.64-.18 1.32-.27 2-.27.68 0 1.36.09 2 .27 1.53-1.04 2.2-.82 2.2-.82.44 1.1.16 1.92.08 2.12.51.56.82 1.27.82 2.15 0 3.07-1.87 3.75-3.65 3.95.29.25.54.73.54 1.48 0 1.07-.01 1.93-.01 2.2 0 .21.15.46.55.38A8.012 8.012 0 0 0 16 8c0-4.42-3.58-8-8-8z\"/>\n          </svg>\n        </a>\n      </div>\n      <div className='col'>\n        <a className=\"grey-text text-lighten-3\" href=\"https://www.linkedin.com/in/jay-jaber-7439bb1b3/\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-linkedin\" viewBox=\"0 0 16 16\">\n            <path d=\"M0 1.146C0 .513.526 0 1.175 0h13.65C15.474 0 16 .513 16 1.146v13.708c0 .633-.526 1.146-1.175 1.146H1.175C.526 16 0 15.487 0 14.854V1.146zm4.943 12.248V6.169H2.542v7.225h2.401zm-1.2-8.212c.837 0 1.358-.554 1.358-1.248-.015-.709-.52-1.248-1.342-1.248-.822 0-1.359.54-1.359 1.248 0 .694.521 1.248 1.327 1.248h.016zm4.908 8.212V9.359c0-.216.016-.432.08-.586.173-.431.568-.878 1.232-.878.869 0 1.216.662 1.216 1.634v3.865h2.401V9.25c0-2.22-1.184-3.252-2.764-3.252-1.274 0-1.845.7-2.165 1.193v.025h-.016a5.54 5.54 0 0 1 .016-.025V6.169h-2.4c.03.678 0 7.225 0 7.225h2.4z\"/>\n          </svg>\n        </a>\n      </div>\n      <div className='col'>\n        <a href=\"mailto:calijayjaber@gmail.com\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-envelope-fill\" viewBox=\"0 0 16 16\">\n            <path d=\"M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z\"/>\n          </svg>\n        </a>  \n      </div>\n    </div>\n  }\n\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <main>\n        <Display/>\n        <Buttons/>\n      </main>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}